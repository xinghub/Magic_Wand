#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV1D_KERNEL_0 {69, -72, -46, 71, 34, -49, 85, 5, -26, 26, -67, 18, 8, -28, -80, 21, -9, -57, -74, -56, 11, -47, -61, 22, 26, -29, 75, -82, -31, 9, -43, -4, -17, -70, -25, -28, -38, -5, 3, 11, 46, 3, -59, -39, 32, -58, -34, -29, 21, -31, -67, 45, 18, -89, 56, -42, -83, -28, 73, -91, 18, -8, -71, -41, -77, 53, -21, -79, -13, -70, -60, 75, -51, 19, -88, -45, -5, -40, 16, -23, -17, -54, -6, 63, -2, 31, 54, -72, 2, 44, -57, -64, 40, -51, 41, 52, -59, 37, 0, 20, 13, 35, 25, -47, 15, -48, -47, 55, -38, -62, -4, 62, -40, 56, 45, -45, -51, 59, -22, 31, 25, 33, 53, -17, 60, 61, -12, -45, -59, 57, -88, -39, -22, -80, 39, -16, 46, -7, 53, 0, 77, 45, -65, 42, 65, 25, 62, 52, 55, 67, 67, -5, 2, 14, 55, -54, 39, 46, -64, -43, -15, -30, -34, -14, -8, -41, -8, -81, -26, 57, -32, 54, 1, -72, 63, 10, -12, -20, 7, -63, -76, -23, -40, -78, 56, 2, -22, 34, 36, 58, 53, 64, 31, -51, -14, 35, 51, 39, -2, 9, 59, -50, -80, -20, -81, -25, 26, -58, -56, 13, -64, 10, 23, -32, 44, 45, -27, -8, 61, 70, -43, 52, 57, 64, 59, -56, 7, 3, -28, 36, -15, -43, -42, 21, 46, 49, 53, 42, -24, 76, -11, 57, 75, 17, -10, -6, 35, -17, 82, 38, 40, 72, -15, 72, -19, -13, 12, -47, -59, 40, -37, 25, 4, -2, 36, 53, 78, -34, -19, 86}

#define TENSOR_CONV1D_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_BIAS_0 {32, 76, 7, 42, -32, -11, 51, 52, 11, 11, -53, -31, 8, 14, 76, -21, -18, -13, 40, -11, -12, -27, 12, 57, 82, 17, 4, 8, -11, 25}

#define TENSOR_CONV1D_BIAS_0_DEC_BITS {9}

#define CONV1D_BIAS_LSHIFT {3}

#define CONV1D_OUTPUT_RSHIFT {8}

#define TENSOR_CONV1D_1_KERNEL_0 {15, -40, 17, -4, 20, 53, 36, -35, -11, 36, 39, -16, 40, -28, -27, 69, 64, 45, -14, 52, -59, 63, 29, -16, -32, -31, 66, -31, -3, -4, 39, -54, -7, -23, -53, -22, 41, 14, -29, -30, 10, 43, 22, 1, -43, -32, 23, 0, -52, 53, 29, 28, 43, -22, 36, 1, 49, 74, -51, 74, -52, -23, -10, 20, -37, 48, -29, -23, 29, 26, -47, 11, -24, -4, -56, -25, 0, -43, -31, 8, 43, 19, -23, 51, 38, -6, 55, 40, -13, 27, 55, 4, -29, -3, 4, -16, -1, -20, 21, 18, 2, -33, 26, 11, -27, -19, -22, 43, 35, -28, 9, 4, -42, -5, 27, 6, -67, 9, 19, -40, 66, -11, 17, -1, -12, 66, 63, -49, -41, -56, -4, -40, 66, -24, 38, 27, 0, 7, -24, -20, -36, -10, 16, -19, -27, 25, -53, -37, -26, -16, 0, -7, -40, 18, 7, -13, -7, -43, -11, 27, -47, 37, 35, -32, 3, -33, -26, 43, 39, 76, 43, 51, -21, 7, 26, 43, 4, -17, 25, -59, -38, -6, -63, 10, -22, -38, -23, -39, 9, 20, -8, 26, 29, 21, -51, 1, -55, -9, 18, -1, 41, 22, -14, 53, -46, -21, 15, 29, 33, -31, -54, 15, -44, 37, -16, -36, 12, -55, -20, 35, -18, -24, -60, 14, -64, 1, 40, 54, 76, 25, 66, 24, 20, -1, 20, -33, 18, -14, 72, -45, 4, -32, -67, 44, 8, 50, 12, -73, 26, 28, 18, -40, -57, -18, -68, -25, 47, 3, 15, 22, 68, 2, -15, -14, -10, 31, 51, 49, 52, -53, 38, 4, 31, -17, 8, 1, 28, 30, 60, 1, 27, 55, 16, -9, 50, -50, 28, -16, 74, 63, 58, 25, 20, 9, -17, -11, -46, -53, -14, 49, 42, 51, 17, 35, 12, -24, 0, 36, 43, -23, 63, 52, 11, 19, 3, -42, 31, 61, -14, 39, -7, 43, 28, -6, -61, -17, 40, 9, 67, -21, 12, 8, 30, 6, -4, 58, 31, -45, -16, 43, 47, 16, -29, -38, -42, 51, -30, 69, 63, 31, 6, 28, 46, 43, -44, 33, -45, -12, 62, -48, 44, -34, 13, -61, -4, 2, 1, 28, 46, -42, -14, -29, 55, -15, -39, -23, 24, 81, -4, 46, 45, 11, 12, -14, 32, -22, -25, 48, 0, -59, 45, 50, 29, -17, -30, 58, 64, 24, 6, -57, 19, 17, -14, -24, -6, -42, -40, 33, 1, -6, -17, 19, -67, 34, -42, -59, 15, 2, 71, -4, 10, -8, 4, 10, -2, -2, 52, 19, 56, -57, 13, 15, -30, -22, 15, -6, -7, 73, -28, -15, -39, -12, 3, -39, -37, -24, 10, 34, 15, -47, -24, -20, -39, -17, 59, 5, -21, -22, -12, 24, 51, -63, -28, 30, -67, 29, -18, -53, -8, -28, 59, -43, -23, -4, -13, 27, -18, -11, 48, 37, 0, 17, -37, 48, -32, -5, 27, 0, -22, 53, 37, -58, -19, -21, -13, -62, 19, 12, -31, 53, -31, -4, 29, 57, -47, 11, 30, -28, -4, -37, 20, -61, 22, 29, 45, 24, 24, 33, -3, -25, 16, -53, -48, 38, 36, -36, -53, -52, -49, 22, 54, -63, 48, 55, 39, -4, -25, 19, 48, -17, -6, -17, -71, 15, -17, 69, 69, -51, 59, -61, -1, -3, -53, -25, 17, -23, -70, 0, 67, -10, -17, -43, 26, 20, -19, 22, -12, -51, 28, -18, -13, 5, -38, -2, -24, 23, 59, -4, 18, 19, -61, -58, -8, -71, -17, -22, 15, 4, 7, 13, -42, -11, -7, 2, -78, -12, -31, -38, -8, -69, -23, 37, -11, -2, -52, 32, 49, -1, 55, 1, -28, 15, -60, -21, -31, -27, -19, 65, 62, 0, 40, -57, -55, -50, -28, -42, 1, -20, -15, -73, 49, -12, -13, -32, -1, 11, -20, -67, -48, -39, -69, -3, -27, 6, 18, 41, 10, 32, 20, -13, -3, 47, -71, -54, 19, -6, 51, -26, -37, -40, -33, 35, -56, -69, -58, -21, 26, -89, -22, -34, -64, -42, 8, 18, 3, -41, -16, -30, 1, 44, -31, 48, -53, 15, 48, 9, -3, 1, -30, 29, -41, 1, -40, -1, 27, 4, 20, 28, -9, -20, -9, 40, 0, 18, -28, 26, 43, -5, -59, 16, -24, -17, -30, -58, -11, -64, -44, -9, 28, 4, -10, 55, 19, -29, -16, 4, 19, 21, 31, -34, 49, -32, 64, 13, 35, -20, -51, -41, 33, 53, 13, -11, -6, -44, 50, -45, -68, -32, -55, 16, 12, 58, 41, -40, -60, -7, 3, -15, -29, -56, -37, 1, -9, 20, 34, 5, -39, 45, 18, -5, 3, -20, -46, 13, 12, -23, 16, -15, -27, -16, 63, -6, -12, -10, -37, -4, 46, 32, 44, 44, -57, -50, -14, -42, 52, -43, -60, 52, 31, 64, 33, -18, -43, 2, -38, -50, -7, -32, -13, -9, -11, 29, 72, 42, 28, 28, -19, 74, 41, 60, -6, 57, -23, -2, -14, -5, 7, 32, 58, 50, 44, -12, 10, -27, 41, 7, 23, 16, -42, 4, -5, 21, 10, -20, 29, 3, -57, 39, 1, -16, -25, -32, -43, 42, -13, 22, 34, -31, -35, -30, 42, 25, -8, 1, 53, 4, 61, 8, -41, -16, -49, -7, 39, 1, 61, -9, -67, 72, 5, 50, 15, 24, 26, 33, -23, -8, -25, -57, -51, -17, -9, 53, 24, 30, 17, -34, 80, 41, -34, -9, 75, 37, 31, -6, -18, -3, 47, -68, -13, -49, 20, 39, -1, -19, -20, -24, 54, -10, -2, 53, -47, -24, -76, -13, 17, -49, 29, -9, 3, 23, 77, 18, 6, -22, -19, 13, -13, -25, 7, -42, -54, -60, 33, 0, 35, -32, 74, -35, 26, 37, -51, 4, 7, -32, 55, -31, 38, -32, 4, -39, 68, 34, -55, -73, 10, -44, 39, -54, 6, -50, -36, -43, -23, -3, -8, -2, 64, 23, -61, 17, -26, 1, 20, 16, -6, -27, -21, 27, -12, 43, -10, 70, -53, -1, -64, 1, 26, 26, 4, -28, -36, 47, 71, 45, 72, -26, -44, 0, 55, 56, -11, -18, -52, -7, 0, 39, -1, 43, 58, 4, 58, -25, -27, -49, -51, 38, -20, -30, -17, -40, -39, -6, 12, -26, -19, 5, 2, 44, -12, 58, 28, 63, 7, -50, 18, -26, 50, 56, -41, 32, 49, 75, -29, -39, -62, 31, 10, -39, -18, 23, -19, -39, 31, 19, -6, 21, -25, 50, -48, 75, -62, 32, -32, 46, 0, -19, 50, -28, -29, -1, 59, 62, -45, 29, -1, 56, 34, -48, -22, 13, -36, -47, -5, -44, 28, 1, -32, 17, -28, -8, 22, 25, -8, 0, 5, -5, -55, -41, -30, -4, 11, 24, 21, -5, -41, 31, 50, 62, 22, 38, -61, -39, 8, -52, 77, 19, 30, -29, -33, 9, -57, -27, 21, 13, -31, 12, 28, 17, 21, 46, -6, 23, -22, 71, 5, -30, 65, 13, 32, -54, 11, -2, -6, 11, 80, -11, -49, 17, 16, 42, -36, 47, 13, 40, 17, 60, -16, 4, 7, -38, 26, 53, 57, 67, 46, 9, 21, 75, -1, -29, 16, 59, 45, -49, -6, -50, -48, 58, 62, -26, 27, -55, 76, 61, 52, 20, -5, -21, -4, -37, 18, 10, 15, 62, -28, 43, 35, 78, 20, 36, -32, -30, -1, 18, 6, 31, 1, 9, 61, -43, 2, -68, 71, 77, -4, -21, -24, 14, 50, 7, -55, 33, 71, -26, -35, -33, 50, 70, 43, 64, -37, 45, -32, 17, 58, -52, 21, 13, -33, -10, -30, -23, 24, 50, 11, 30, 17, -24, 23, -23, -40, -22, 7, -68, -25, -45, 23, -6, -43, 17, -53, -24, 9, 73, 40, -4, 12, 7, 37, 12, -64, 25, 5, -36, 70, -59, 0, 43, -52, 72, -23, -39, -19, 4, 33, 14, -25, -4, 33, -2, 8, 69, 22, 63, -28, 64, -23, 18, -41, -8, -49, 12, -34, -35, 76, -62, 58, 61, -22, 59, 33, 2, -27, -18, -15, 21, -30, -29, 12, 28, -43, 31, 45, -15, -31, -7, 0, -15, -40, -4, -39, 35, -19, 25, 17, 5, -13, -4, 26, 59}

#define TENSOR_CONV1D_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV1D_1_BIAS_0 {-35, -21, 29, -67, -29, -1, 1, -53, 68, -14, 42, 44, 60, 72, 14}

#define TENSOR_CONV1D_1_BIAS_0_DEC_BITS {9}

#define CONV1D_1_BIAS_LSHIFT {3}

#define CONV1D_1_OUTPUT_RSHIFT {10}

#define TENSOR_DENSE_KERNEL_0 {4, 37, -23, 6, -57, 7, -22, -44, 13, -27, -14, -25, 11, 5, 0, 9, 1, -33, 23, 0, -41, -16, -8, -56, 70, 15, -5, 16, -1, 6, -38, -8, -33, -8, -8, 55, -33, -1, -23, -51, -25, 3, -11, -14, -3, -24, 3, -50, 30, 12, -47, 5, 10, -60, -55, 2, 50, 2, -63, 20, 25, -44, 33, 29, -28, -31, 30, -24, 0, -41, 11, -9, 22, -39, -14, -45, 14, 15, -46, -35, 16, -37, -61, 35, -28, -9, -19, 25, -67, -52, -2, -41, 1, -47, -44, 7, 38, 22, 4, -22, -22, 8, -9, -25, -20, 25, 8, -25, 29, 7, -38, -35, -3, -12, -62, 35, 23, -51, -1, -47, -48, -14, -35, -1, 43, -1, 21, 18, 1, 47, -7, -19, -41, 8, 11, 7, 25, -39, 10, 17, 8, -8, 2, 10, -42, -43, -14, 20, -20, -16, -35, -38, -64, 55, 48, 38, 36, -31, -25, -23, -21, 5, -11, -16, -16, 15, -48, 6, -53, 10, 28, -2, -27, -2, -25, -64, -53, 2, 0, -19, -6, 36, -28, -34, -52, 6, 10, 24, 33, 8, 42, 11, 34, -2, 33, 14, -27, 3, -24, -17, -17, -8, -11, -37, 0, -30, 6, -39, -17, 13, 24, -28, 16, 12, 0, -1, -3, 9, -47, 25, -28, -35, -6, -14, -8, 10, -4, -33, 29, 15, -11, -34, -22, -21, -33, 34, -31, 7, 20, 15, -16, 22, -35, -30, 29, -1, -1, 11, 2, -35, 30, -15, -5, -32, -2, -21, -31, -4, -40, -56, -25, -32, -41, -20, -21, 25, -45, 25, 21, 11, 39, 58, 6, -40, -3, -5, -3, -9, 2, 5, -19, -23, 3, -10, -35, -36, -21, 7, -56, 13, -42, 18, 2, -15, 13, -25, 36, 8, 12, -12, -2, 2, -17, -16, -16, -27, -36, 20, -60, -18, -27, 3, -12, 8, -39, -21, -9, -2, -33, -43, 24, 0, 30, 9, 9, -10, 19, -25, -3, -39, -23, -5, -2, 1, -12, -17, 27, 35, -5, -19, -31, -26, -20, 14, 1, 33, -10, -7, 27, 29, -19, -69, 27, -49, 30, 9, 16, -37, -14, -14, -15, -12, 6, -58, -25, 23, -26, -36, 33, -23, -11, -51, 14, -6, -28, 0, -28, 1, -14, -25, -32, -16, 45, 18, -45, -54, -7, -31, -58, -37, -39, -29, -26, 31, -12, 25, 2, 19, -3, -7, -64, 40, 2, -36, 5, -44, 4, 9, -32, 16, -28, 31, 17, -30, -3, -32, -3, -35, -45, -4, -1, 3, 6, 18, -1, 18, 10, 15, 34, -31, -42, -43, 0, -16, -1, -7, -34, 0, -35, 27, 10, 5, -4, 0, -62, 4, 0, -9, 11, 15, -36, 19, -2, 7, -14, -46, -36, 18, -21, 19, -38, 3, 42, 29, -2, -12, -13, 27, 42, 16, -27, 6, 17, -29, -4, 6, -3, -33, -15, -48, 16, -8, -26, 24, -11, 12, -17, -36, -11, -25, -44, 28, -5, 0, 17, 16, 11, -46, -38, -6, -2, 27, -54, -28, 14, 34, 11, -16, 25, 20, 15, 20, -30, 25, -49, -37, -39, 14, 23, 13, 19, 37, -28, -45, 19, -9, -20, 30, -14, -35, -1, -15, 4, -1, -3, -24, -39, -37, 12, -38, -25, -39, -19, 7, -57, -9, -41, -7, -35, -7, 28, -1, -12, -29, 4, -2, -20, -17, 20, 43, -21, 16, -1, -14, 23, 41, -24, 1, 3, -37, 7, 18, -26, 16, -48, 30, 32, -45, 16, -59, 29, -9, 46, -22, -20, -2, -37, -35, 35, 26, -19, 50, 7, -20, 8, -70, -12, 21, -2, 17, 23, 18, 11, -44, 46, -21, 7, 50, 0, -10, -19, -73, -13, -24, 3, 7, -5, -37, -39, 24, 1, 5, 33, 0, 27, -22, 32, 11, -56, -21, 9, 54, -4, -30, 21, -4, -7, -20, -2, -8, -57, -19, -42, -30, 27, 35, 5, 2, -52, -7, -45, 6, 7, 33, 6, -1, 21, -26, -35, -57, 6, -50, 6, 45, 1, -34, -32, 3, 8, 5, -23, -44, -30, -25, -37, 21, -25, -8, -16, -13, -17, -8, 22, -3, 11, 7, -52, -28, -47, -47, -31, -61, 38, 18, 14, -43, 46, -7, 12, -10, -26, 2, -8, -18, -26, -11, -5, -37, -6, -6, 5, -2, 13, -56, -34, -29, 12, 5, 33, 9, 3, -38, -9, 4, -37, 17, 27, -48, -32, 19, -38, 22, -44, 34, 23, 22, -7, 1, 20, -31, -7, 6, -54, 16, -47, -12, -20, -23, 15, -32, 32, 20, 38, -41, 4, -2, -22, -28, -2, 30, -45, -4, -4, -34, -10, -39, -11, 9, -47, -12, -13, -13, -58, 30, -22, -34, -19, -20, 1, -9, 0, -21, 22, 4, -12, -11, -27, -30, 18, -8, -51, 34, -48, 31, -20, -29, 0, 27, -4, -16, -27, -10, 24, -14, 16, 21, 30, 29, -31, 5, 43, -16, -52, 28, -58, 29, -22, 38, 21, -44, 2, -44, 18, 37, -14, -8, 35, -5, 27, 0, -10, -24, -3, -20, 13, -43, 10, -23, -28, 15, 1, -3, -6, 5, 16, 14, -33, 2, -6, -37, -33, -14, -5, -41, 16, 23, 9, 12, 0, 38, 8, -20, 8, 5, 9, 14, 2, -4, -2, -5, 8, 7, -23, 24, -5, 44, -16, 16, -26, -63, 41, -53, -38, 3, 25, -16, -39, -22, -2, -23, -15, 30, 46, 23, 23, -29, 16, -66, 29, -29, 20, -51, -46, 25, 14, -46, -32, -21, 18, -34, 27, -14, -39, -23, -31, 25, 2, 6, 35, -36, -34, -34, 22, 9, -36, 34, -1, 1, 6, -14, -16, -16, 21, -11, -26, -60, -32, 17, -19, -25, -16, 14, 27, 28, 5, -31, 1, 25, -3, 13, 2, 26, 16, -22, 24, -40, -26, 33, 40, -17, 36, 11, -21, -1, 2, -54, 33, 15, 37, 38, -42, -7, -16, 47, -20, -25, 28, -5, 15, -4, -47, -5, -15, 18, 5, -14, 6, 2, -2, 9, -12, -42, -6, -26, 31, 27, 6, 5, 15, -3, -5, -6, 48, 11, 17, -50, -36, -11, 15, 23, -32, 39, 7, -23, -21, 8, 25, -18, 25, -53, 41, -19, -42, 6, 41, -18, -20, -39, -41, 25, -37, -34, -14, -15, -7, -6, -38, 8, -34, 2, -34, 13, -7, 2, -22, -55, 7, 60, -9, -40, -17, 67, -23, 14, -10, 1, 10, -6, 20, 66, 54, -38, 14, -15, 52, 24, 2, -8, 30, 21, -38, 14, 4, -28, 23, 8, -19, -29, -1, -22, -17, -67, 45, 34, -52, -14, -18, -15, -5, -41, 15, -24, -54, 5, 7, -17, -4, 3, -65, -10, -37, 16, -27, 19, 34, -20, 4, 34, -56, -13, -29, -2, -17, 0, -22, -30, 9, 0, -2, -24, 43, -4, -68, -27, 5, 19, 11, 36, -19, -58, -17, -45, -10, 9, 12, -29, -57, -40, 35, 22, 5, -49, 14, 24, -37, 14, -58, 37, -16, 9, -45, -12, -11, -12, 6, -9, -56, 20, -4, -41, 5, -36, 14, 28, 1, 45, -44, 22, -19, -11, -12, -20, 8, 3, 41, 11, -18, -33, -7, -34, -66, -16, -55, 32, -41, -1, -41, -10, 13, -37, -43, 23, -23, 15, -46, -8, -18, 8, -24, 26, -42, 3, 12, -32, 6, 22, -20, 11, 0, -14, -29, 44, -28, 29, -66, -21, 23, 29, 4, -5, -25, -2, -52, -7, 11, -39, -25, -8, 24, 31, -7, 2, -14, -23, 29, -22, -1, -7, -12, -44, 10, -30, -39, -36, -22, -8, -65, -30, -16, -18, 13, -55, -14, 45, -20, -9, 38, -6, 16, -42, 23, 17, -32, -23, 19, -20, -8, -24, 32, -7, 16, 20, -29, 1, -24, -5, -7, -35, 34, 13, 24, -5, -22, -8, -44, 45, -12, 24, -28, -11, -4, 17, 6, 25, -37, -30, -8, 7, -31, -4, 37, -14, -16, 10, 19, 28, -3, -36, 20, 15, 4, -7, -18, -28, -37, 16, -26, 22, 14, -12, -18, 8, -12, -32, 11, -31, -27, -39, 20, -5, -38, 15, -7, 13, 20, -12, -36, 20, 12, 36, -28, -19, -31, 13, -40, 17, -39, 9, -7, 25, 26, -24, 33, -28, 39, 39, -6, -6, -55, -16, -1, -29, -5, 21, -51, -17, 27, 22, 0, 45, 7, -33, -33, -16, 5, -24, -2, -42, -11, 0, 48, 6, 7, 27, -2, -18, -23, -28, -14, 0, 12, 16, 19, -3, -8, 20, 32, 9, -35, -11, -40, 23, 5, 35, -6, 11, 3, 20, 16, 11, 1, -28, -37, 45, 31, 2, -21, 5, -18, -23, -45, -13, 39, -35, -63, 27, 3, 7, 6, 17, -18, 4, -37, 39, 15, -27, 53, -25, 21, 31, -17, 11, 9, 41, -12, -34, 8, -50, -34, 0, -32, 28, 10, -1, 26, 10, -39, -45, 25, 36, 14, 7, -7, 4, 9, 5, 34, 17, 37, -13, 34, -9, 8, -26, 10, -6, -16, 43, -3, 50, 28, -9, -42, -14, -6, -24, 2, 15, 3, 45, -51, -14, -7, -5, 51, -29, 31, -23, -17, -23, -13, -28, -26, -50, 5, 30, -44, 3, -24, -18, -11, -52, -24, -39, -43, 39, -30, 27, 38, -38, -34, 49, 9, -18, -38, -6, 0, 11, -10, -1, -2, 2, -18, 9, -5, 45, -21, -10, -21, 3, -13, 7, -9, -16, 17, 20, -5, -19, 1, 4, -16, -29, 18, 29, -2, 36, -18, -34, -36, -29, 34, 2, -16, 34, 37, 8, -13, -40, 11, 32, 2, -13, 16, -54, -22, 18, 14, 11, 40, -2, -7, -3, -26, 18, -4, -39, 5, -7, -19, -68, 24, -22, 10, 35, 18, -24, -6, 0, -14, 0, -34, 9, -35, 0, -33, -19, -17, -10, -21, 45, 50, 18, 30, -45, -16, -38, 6, 6, 29, 43, -31, 5, -32, -26, 14, 30, 24, -40, -14, 21, 22, 8, 8, 41, 35, 10, -19, 11, 17, 32, 10, 10, -2, -29, 3, -20, -27, 27, 36, 33, -15, 27, -21, -4, 55, -31, -14, 57, 11, -42, -12, 10, -37, 0, -32, -17, 2, -4, -13, 17, -12, 25, -26, -5, 2, -52, 0, -18, -31, 24, -24, 3, -5, -17, 27, 22, 61, -20, 11, 23, -32, -11, -14, -33, 18, 38, -19, 39, -9, -16, 15, -6, 50, -37, -4, 19, 46, 27, 22, 30, -5, -14, -5, 17, -15, 26, -13, 6, -51, -24, 10, 20, -12, -21, 6, -20, -22, -7, -20, 10, -2, -33, 1, -35, 9, -40, -4, -14, 40, 52, -50, 12, 48, -25, -14, 25, -11, -33, -22, 27, -30, 3, 14, -22, 16, 11, -19, -27, -4, -21, -36, 34, -38, 10, 41, 34, 5, -26, -30, -25, 26, 2, 15, 3, -40, -17, 1, 2, -20, 14, -36, 42, -41, 44, 8, -24, -45, 33, -2, 7, 2, -25, -8, -17, -31, 46, -26, 15, -31, -4, 29, 5, -2, 15, -12, 20, -7, 21, 29, -23, 14, 24, -25, -75, -34, 7, 0, 22, -26, -14, -18, 19, -20, 3, -10, -14, -34, 6, 10, -60, -26, 13, 47, -13, -5, -17, 26, 51, 6, 42, 26, -5, 6, 37, -19, 43, -8, -1, -33, 17, 28, -6, -1, 5, -4, 4, 4, -34, 13, -34, 7, 21, 17, 12, 24, -19, 37, 16, -12, -20, -18, 1, 13, 8, 4, 1, 2, -22, 6, 38, 18, -18, 43, -15, -9, -41, 19, -1, 39, -1, -9, 15, -3, -35, 36, -11, -5, 32, -4, -9, -14, -3, 10, -25, 3, 25, -19, -31, -14, 18, 28, -14, -9, 6, 18, -35, -38, -19, -24, -26, -29, -29, -12, -9, -47, -29, 19, -63, -5, 28, 3, 20, 24, -7, -8, -13, 35, -15, 18, -57, -33, 13, 0, -34, 35, 0, 8, -20, 22, 9, -27, -3, 0, 38, -6, -19, -24, 13, -29, 11, -27, -21, -23, 27, -28, -45, -25, -10, -26, 22, 17, -26, -10, 13, -2, 46, -3, 23, 22, 25, -23, 37, 18, 5, -12, 12, -58, 25, -45, -18, -17, -28, 18, -12, 7, 47, -8, 17, 25, -12, -14, -19, 31, -18, 13, -16, -10, 24, -66, -49, -9, 29, 13, -9, -38, -24, -22, -18, -6, 34, 32, -7, 0, -33, -7, 34, 33, 12, 2, -33, -32, 48, -2, -11, -25, 6, -55, 54, 23, 53, 28, -6, 8, -5, -37, -3, -23, 46, -20, -40, -11, -52, -5, 31, 47, -9, -10, -14, 10, -16, -13, 0, -16, 52, -31, -8, 57, -12, 20, 14, 15, 32, 10, -75, 52, -46, 55, -11, -3, 21, -7, -6, -14, 2, -31, -30, 53, -8, 16, -52, 27, -21, 9, -23, 20, 33, -31, -14, -53, -41, -5, -59, -18, 7, 23, -1, 24, 12, 21, -16, -7, 20, -31, 44, 17, 1, -22, 21, 37, 34, 19, 15, -3, 9, -50, 36, 32, -22, -12, 12, -19, 38, -1, 57, 45, 3, -7, 5, -9, 14, -29, -9, 14, -43, -14, -1, -28, -29, 26, -53, 11, -25, 7, -36, -9, -52, -37, -9, 12, -56, -23, -50, 23, 18, 39, -28, 35, 23, -35, -37, -41, 37, -40, 42, 38, 1, -24, 0, 32, 13, 2, -22, 9, 13, 31, 46, 22, 27, 18, 46, 14, -27, 6, 22, -22, -21, -23, 35, -40, -4, -53, 18, -10, 38, 14, -11, -17, -31, -30, -5, 9, -27, -16, -30, -16, -34, -7, -36, -5, 10, 2, -20, 22, -21, -25, 12, -43, 11, -11, -17, -33, 15, -27, -14, 45, -47, -28, -15, -41, 9, 15, 8, 17, 23, 18, -14, -6, 37, -3, 47, -7, 19, -16, 12, -44, -40, 2, 51, -12, -28, -32, -19, 21, -39, -10, 18, -12, 11, -7, -50, -11, 0, 30, -26, -23, 48, 22, 4, -4, 13, 16, -18, 16, 10, -30, -22, -30, 50, -32, 34, 6, -36, 19, 11, -19, -32, 11, 23, -10, -1, 29, -9, -36, 8, -25, -20, 17, -20, -17, 15, 26, 0, 27, 6, -16, 32, 24, -19, -6, -16, 46, 18, -6, 50, -48, -23, -7, -56, -14, 30, -34, 19, 22, 21, -22, -12, 20, -23, -20, -1, -5, 22, 25, 10, -1, 18, 1, 22, 31, 30, 18, -38, -31, 16, 19, 52, 24, 46, 29, -13, -54, -9, -27, -9, 23, -38, 39, 37, -26, 13, 21, 39, -15, -14, -7, 7, 3, -11, -24, 52, -32, 14, 4, -52, 0, 20, 24, 27, -7, -7, -15, -2, -23, 4, 4, 10, -32, 20, 4, -21, -8, 15, 20, -33, -24, -47, 38, 20, -62, -34, 3, 43, 48, -6, 15, 21, -30, -33, -38, -25, -1, -23, -31, 17, -42, 18, 43, 13, 29, 7, 8, 14, 3, -14, -18, 3, 50, -4, -53, 25, 14, 31, -26, 7, 20, -44, 26, -5, 17, 15, 6, -44, -16, -18, -6, -33, -43, -3, 22, -18, -25, -15, 21, 5, -17, 10, -52, -25, -12, 17, 47, -40, 11, 17, -25, -57, 10, -5, 35, 29, 53, -20, 7, 47, -37, -9, -17, 36, 5, 2, 10, -17, 8, -22, -32, 36, 10, -26, 5, 15, -24, -23, 33, -42, 18, 45, 5, -46, -43, -18, 5, 28, -20, 4, -27, 6, 21, -10, 0, -13, -9, -32, -4, -43, -2, -7, -14, -30, 23, -15, 4, -3, -5, 19, -14, 36, 39, 3, 17, 21, 25, -30, 36, 32, -31, -43, -45, 10, -3, 16, 0, -15, -9, 13, -6, -10, 16, 23, -12, -36, -8, 19, 23, 28, -11, 6, -7, -19, 14, -18, -22, 22, -25, -37, 14, -26, -26, -18, 28, 13, 13, -2, 16, -45, -1, -13, 2, -8, 14, -14, 9, 20, -1, -26, -5, 32, 26, -16, 16, -23, 14, 4, 21, 11, 13, -10, -3, -3, 26, 21, 8, 9, 22, 13, 16, 11, -22, 25, 29, -12, -17, 6, -30, -34, 41, 18, -1, -24, 12, -59, 3, -37, -38, -7, 12, 7, -13, 21, -55, 25, 46, 12, -9, 6, -3, 1, 22, 18, 6, -38, 18, 15, 9, 19, -1, -30, 34, -38, 2, -50, 16, -12, -27, 20, -17, -28, 34, 26, 15, 13, -44, -11, 28, -23, -25, -12, -6, -4, -8, 32, 5, 24, -29, 16, -14, -50, -18, -12, 8, 24, -39, -48, -25, -53, 0, -17, -17, 38, 24, 2, 2, 22, -9, -21, -46, 15, -13, 12, -9, 2, 29, 27, 10, -9, 4, 8, 19, -29, -9, -2, 52, -9, -1, -41, 18, -22, -14, 11, -10, 8, -6, -10, 13, -14, -35, -28, 19, -8, -2, -25, -52, 3, -25, -19, 24, -38, -22, -49, 3, -34, 27, 31, 28, -30, 8, -13, -32, -2, -28, 28, -5, 65, 63, -19, -39, 5, 18, 1, 41, -14, -3, -52, 16, -10, -3, 11, 25, 1, 8, -50, -42, -9, 21, 58, -29, -64, 48, 2, 17, -24, 1, -15, -19, -4, 21, -6, -42, -4, 22, -36, -6, -18, 32, -27, -9, -21, -1, 1, -17, -18, 9, 1, 8, -20, -14, 1, -47, -48, 27, 6, -6, 9, -36, -11, 11, -4, 15, -40, -47, 19, -47, 51, 26, -57, 6, -17, -8, -17, 11, 6, 4, -31, -9, -17, 20, 15, 27, -8, -18, -34, 19, -43, 0, -16, -33, 5, -31, -14, 4, -7, -13, 49, -31, 8, 20, -23, 16, -40, 34, -36, -4, -12, 11, -13, -9, -4, -34, -4, -42, -13, 13, 44, 34, -41, -18, 27, -29, -17, -6, -19, -16, -5, -28, -8, -43, -1, -32, -24, 30, -58, 17, -9, 19, -4, 29, 7, 21, -19, -21, -29, -14, -29, 29, 6, -31, 14, 1, -49, -9, 11, -9, 3, -28, -13, -54, -36, -33, -45, -31, -52, 13, -26, -11, 5, -51, 19, -42, 10, 27, -33, 18, -14, -24, -55, -43, 11, -24, 0, -53, 23, -70, 11, 17, -1, -15, -15, -31, 48, -5, 25, -1, -11, 25, -3, -23, -39, -41, 17, -5, -14, -33, 29, -5, 12, -18, 28, 18, -3, -18, 13, -32, -47, -50, -16, -9, -47, -31, -9, -31, 0, 15, -3, -10, -48, 15, 3, 25, -9, 10, -39, -24, -22, -14, -20, 5, 35, 10, 22, -22, 8, 0, -14, 12, -33, -19, -10, 17, -11, 24, -19, -5, -19, -44, -16, 20, -22, 27, 13, -22, 20, 11, -51, -12, -18, -2, -13, -22, -40, 15, -59, 5, -38, -13, -50, 16, -13, -38, -68, -42, -12, 3, -4, -22, -1, -4, 30, -18, -2, -1, -4, -47, -10, 62, 48, 29, 4, 51, -49, 12, 34, 26, 3, 33, 27, -8, -66, -44, -29, -40, 17, -27, -52, -26, 43, -36, 36, -26, -22, 33, 30, -7, -14, -47, -44, -26, 2, 12, 5, 32, -47, -32, 24, 20, 17, -3, -29, -14, 0, -57, -68, 34, -15, -36, -3, -55, 1, -38, -13, 36, -52, -30, -8, 21, -15, -8, 8, -46, -39, -22, -67, -38, 16, 29, -31, -6, -31, 41, -41, -47, -13, 12, -38, 17, 62, -24, 20, 6, -6, -5, -11, -7, 14, -7, -8, 7, -7, -9, 9, 11, -10, -59, -45, 57, 44, -2, -58, -1, -31, -45, -10, -1, 17, -13, 22, -9, -30, 35, 44, 3, -26, 3, -30, -22, -27, -20, -22, 4, 9, 35, -13, -5, 13, 17, 18, -43, -43, 20, 29, -61, -35, -24, 6, -36, 7, -51, 4, 14, -14, -51, -23, -41, 14, -18, -60, -16, 14, -30, -37, 45, -24, -18, 2, 27, 36, -27, -34, -9, -10, -50, -22, -6, -24, -21, 64, -26, -19, 27, 49, 31, -19, -20, 17, -7, -41, -1, -20, 2, -12, 20, 18, -4, 23, -2, -15, -32, -39, 10, 20, 22, -25, 8, -24, -34, 50, 15, 6, -42, 23, -1, 9, 3, -19, 6, -23, 10, -36, -8, -1, 13, 45, 20, 4, 42, 52, -24, -26, 3, -5, 17, 16, -37, -40, -2, 47, 45, 50, 9, 25, 16, 19, -17, -1, -10, -15, -21, 15, 30, 6, 34, -11, -15, 9, 24, 46, -4}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {14, 5, 22, -25, 31, -39, -27, -32, -50, -1, -31, -56, 75}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {9}

#define DENSE_BIAS_LSHIFT {1}

#define DENSE_OUTPUT_RSHIFT {8}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 4
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV1D_OUTPUT_DEC 4
#define CONV1D_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_OUTPUT_DEC 4
#define LEAKY_RE_LU_OUTPUT_OFFSET 0
#define CONV1D_1_OUTPUT_DEC 2
#define CONV1D_1_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_1_OUTPUT_DEC 2
#define LEAKY_RE_LU_1_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 2
#define FLATTEN_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 2
#define DENSE_OUTPUT_OFFSET 0
#define DROPOUT_OUTPUT_DEC 2
#define DROPOUT_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[450] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {150, 3};
const nnom_qformat_param_t tensor_input_1_dec[] = {4};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv1d_kernel_0_data[] = TENSOR_CONV1D_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_kernel_0_dim[] = {3, 3, 30};
const nnom_qformat_param_t tensor_conv1d_kernel_0_dec[] = TENSOR_CONV1D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_kernel_0 = {
    .p_data = (void*)tensor_conv1d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_bias_0_data[] = TENSOR_CONV1D_BIAS_0;

const nnom_shape_data_t tensor_conv1d_bias_0_dim[] = {30};
const nnom_qformat_param_t tensor_conv1d_bias_0_dec[] = TENSOR_CONV1D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_bias_0 = {
    .p_data = (void*)tensor_conv1d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_output_shift[] = CONV1D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_bias_shift[] = CONV1D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_config = {
    .super = {.name = "conv1d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_bias_shift, 
    .filter_size = 30,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};
const int8_t tensor_conv1d_1_kernel_0_data[] = TENSOR_CONV1D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_1_kernel_0_dim[] = {3, 30, 15};
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_dec[] = TENSOR_CONV1D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_kernel_0 = {
    .p_data = (void*)tensor_conv1d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_1_bias_0_data[] = TENSOR_CONV1D_1_BIAS_0;

const nnom_shape_data_t tensor_conv1d_1_bias_0_dim[] = {15};
const nnom_qformat_param_t tensor_conv1d_1_bias_0_dec[] = TENSOR_CONV1D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_bias_0 = {
    .p_data = (void*)tensor_conv1d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_1_output_shift[] = CONV1D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_1_bias_shift[] = CONV1D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_1_config = {
    .super = {.name = "conv1d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_1_bias_shift, 
    .filter_size = 15,
    .kernel_size = {3},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {255, 13};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {13};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[13] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {13};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[9];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv1d_config), layer[0]);
	layer[2] = model.active(act_leaky_relu(0.300000f), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv1d_1_config), layer[2]);
	layer[4] = model.active(act_leaky_relu(0.300000f), layer[3]);
	layer[5] = model.hook(flatten_s(&flatten_config), layer[4]);
	layer[6] = model.hook(dense_s(&dense_config), layer[5]);
	layer[7] = model.hook(softmax_s(&softmax_config), layer[6]);
	layer[8] = model.hook(output_s(&output0_config), layer[7]);
	model_compile(&model, layer[0], layer[8]);
	return &model;
}
